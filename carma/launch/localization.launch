<?xml version="1.0"?>
<!--
  Copyright (C) 2018-2021 LEIDOS.

  Licensed under the Apache License, Version 2.0 (the "License"); you may not
  use this file except in compliance with the License. You may obtain a copy of
  the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  License for the specific language governing permissions and limitations under
  the License.
-->
<!--
	Launch file for launching the nodes in the CARMA localization stack minus drivers
-->
<launch>

  <arg name="vehicle_calibration_dir" default="$(find carma)../../CARMAVehicleCalibration/development/vehicle" doc="The directory continaing vehicle calibration type parameters"/>
  <arg name="area" default="5x5" doc="Dimensions of the square of cells loaded at runtime using the download and arealist load types"/>
  <arg name="arealist_path" default="arealist.txt" doc="Path to the arealist.txt file which contains the paths and dimensions of each map cell to load"/>
  <arg name="load_type" default="noupdate" doc="Enum of the map loading approach to use. Can be 'download', 'noupdate', or 'arealist'"/> 
  <arg name="single_pcd_path" default="pcd_map.pcd" doc="Path to the map pcd file if using the noupdate load type"/>
  <arg name="vector_map_file" default="vector_map.osm" doc="Path to the map osm file if using the noupdate load type"/>
  <arg name="simulation_mode" default="true" doc="True if CARMA Platform is launched with CARLA Simulator"/>
  
  
  <!-- Remap any absolute topics to be relative -->
  <remap from="/vehicle/odom" to="vehicle/odom"/>
  <remap from="/estimate_twist" to="estimate_twist"/>
  <remap from="/estimated_vel" to="estimated_vel"/>
  <remap from="/estimated_vel_kmph" to="estimated_vel_kmph"/>
  <remap from="/estimated_vel_mps" to="estimated_vel_mps"/>
  <remap from="/filtered_points" to="filtered_points"/>
  <remap from="/imu_raw" to="imu_raw"/>
  <remap from="/localizer_pose" to="localizer_pose"/>
  <remap from="/ndt_pose" to="ndt_pose"/>
  <remap from="/ndt_reliability" to="ndt_reliability"/>
  <remap from="/ndt_stat" to="ndt_stat"/>
  <remap from="/pmap_stat" to="pmap_stat"/>
  <remap from="/points_downsampler_info" to="points_downsampler_info"/>
  <remap from="/points_map" to="points_map"/>
  <remap from="/predict_pose" to="predict_pose"/>
  <remap from="/predict_pose_imu" to="predict_pose_imu"/>
  <remap from="/predict_pose_imu_odom" to="predict_pose_imu_odom"/>
  <remap from="/predict_pose_odom" to="predict_pose_odom"/>
  <remap from="/time_ndt_matching" to="time_ndt_matching"/>

  <!-- Remap topics from external packages -->
  <remap from="imu_raw" to="$(optenv CARMA_INTR_NS)/imu_raw"/>

  <remap from="system_alert" to="/system_alert"/>

  <remap from="gnss_fix_fused" to="$(optenv CARMA_INTR_NS)/gnss_fix_fused"/>
  
  <!-- <arg name="current_twist" default="current_twist" doc="Remapping of the twist topic used by the deadreckoner node"/>
  <arg name="current_odom" default="current_odom" doc="Remapping of the twist topic used by the deadreckoner node"/> -->
  <!-- Localization Package -->
  <!-- Point Cloud Map file location and parameter loading process -->

  <!-- map param/tf loader -->
  <include file="$(find map_file)/launch/map_param_loader.launch">
    <arg name="file_name" value="$(arg vector_map_file)"/>
  </include>
   
  <!-- Point Cloud map file loading process> -->
  <include file="$(find map_file)/launch/map_loader.launch">
   <arg name="load_type" value="$(arg load_type)"/>
   <arg name="single_pcd_path" value="$(arg single_pcd_path)"/>
   <arg name="area" value="$(arg area)"/>
   <arg name="arealist_path" value="$(arg arealist_path)"/>
  </include>

  <!--EKF Localizer  Commend out to remove and change marked line in waypoint following.launch--> 
  <group unless="$(arg simulation_mode)">
    <remap from="initialpose" to="managed_initialpose"/>
    <remap from="ekf_pose" to="current_pose"/>

    <include file="$(find ekf_localizer)/launch/ekf_localizer.launch" >
      <arg name="show_debug_info" default="false"/>
      <arg name="enable_yaw_bias_estimation" default="True"/>
      <arg name="predict_frequency" default="50.0"/>
      <arg name="extend_state_step" default="50"/>
      <arg name="input_twist_name" default="$(optenv CARMA_INTR_NS)/vehicle/twist"/>
      <arg name="input_pose_name" default="selected_pose"/>
      <arg name="input_pose_with_cov_name" default="selected_pose_with_covariance"/>
      <arg name="use_pose_with_covariance" default="false"/>
      <arg name="pose_additional_delay" default="0.0"/>
      <arg name="pose_measure_uncertainty_time" default="0.01"/>
      <arg name="pose_rate" default="10.0"/>
      <arg name="pose_gate_dist" default="10000.0"/>
      <arg name="pose_stddev_x" default="0.05"/>
      <arg name="pose_stddev_y" default="0.05"/>
      <arg name="pose_stddev_yaw" default="0.025"/>
      <arg name="twist_additional_delay" default="0.0"/>
      <arg name="twist_rate" default="30.0"/>
      <arg name="twist_gate_dist" default="10000.0"/>
      <arg name="twist_stddev_vx" default="0.2"/>
      <arg name="twist_stddev_wz" default="0.03"/>
      <arg name="proc_stddev_yaw_c" default="0.005"/>
      <arg name="proc_stddev_yaw_bias_c" default="0.001"/>
      <arg name="proc_stddev_vx_c" default="0.1"/>
      <arg name="proc_stddev_wz_c" default="0.05"/>
      <arg name="pose_frame_id" default="map"/>
      <arg name="child_frame_id" default="base_link"/>
    </include>
  </group>

  <!-- NDT Matching-->
  <!-- This namesapce sets the parameters which are not set by default in the ndt_matching.launch file -->
  <!-- These parameters are not in the ndt_matching node private namespace -->

  <group>
    <rosparam command="load" file="$(arg vehicle_calibration_dir)/lidar_localizer/ndt_matching/params.yaml"/>

    <remap from="/config/ndt" to="config/ndt"/>
    <remap from="filtered_points" to="random_points"/>
    <remap from="initialpose" to="managed_initialpose"/>
    <include file="$(find lidar_localizer)/launch/ndt_matching.launch">
      <arg name="get_height" value="true" />
      <arg name="use_odom" value="true" />
      <arg name="use_gnss" value="0"/>
      <arg name="gnss_reinit_fitness" value="10000.0" /> <!-- Set to unreasonably high value to ensure no reinitialization occurs as it rarely works -->
      <arg name="base_frame" value="base_link"/>
    </include>
  </group>

  <!-- GNSS To Map Convertor -->
  <group>
    <remap from="georeference" to="map_param_loader/georeference"/>
    <include file="$(find gnss_to_map_convertor)/launch/gnss_to_map_convertor.launch"/>
  </group>

  <!-- GNSS/NDT selection localizer-->
  <group>
    <include file="$(find localization_manager)/launch/localization_manager.launch"/>
  </group>

  <!-- Deadreckoner -->
  <include file="$(find deadreckoner)/launch/deadreckoner.launch">
    <arg name="current_twist" value="$(optenv CARMA_INTR_NS)/vehicle/twist" />
    <arg name="current_odom" value="vehicle/odom" />
  </include>

    <!-- Random Sampler -->
  <group>
    <node pkg="rostopic" type="rostopic" name="config_random_filter"
      args="pub --latch config/random_filter autoware_config_msgs/ConfigRandomFilter '{
        sample_num: 700,
        measurement_range: 200
      }'"/>
    <remap from="/filtered_points" to="random_points"/>
    <include file="$(find points_downsampler)/launch/points_downsample.launch">
      <arg name="node_name" default="random_filter" />
      <arg name="points_topic" default="filtered_points" />
      <arg name="output_log" default="false" />
    </include>
  </group>



  <!-- Voxel Grid Filter -->
  <group>
    <remap from="/config/voxel_grid_filter" to="config/voxel_grid_filter"/>

    <node pkg="rostopic" type="rostopic" name="config_voxel_grid_filter"
      args="pub --latch config/voxel_grid_filter autoware_config_msgs/ConfigVoxelGridFilter '{
        voxel_leaf_size: 3.0,
        measurement_range: 200
      }'"/>

    <include file="$(find points_downsampler)/launch/points_downsample.launch">
      <arg name="node_name" default="voxel_grid_filter" />
      <arg name="points_topic" default="$(optenv CARMA_INTR_NS)/lidar/points_raw" />
      <arg name="output_log" default="false" />
    </include>
  </group>
</launch>
